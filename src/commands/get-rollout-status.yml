description: |
  Gets the rollout status of a resource.
  This command is only valid for resource types that are valid
  for usage with `kubectl rollout` subcommands.
  Requirements: kubeconfig should be configured to connect to the cluster.

parameters:
  resource-name:
    description: |
      Resource name in the format TYPE/NAME e.g. deployment/nginx-deployment
    type: string
  namespace:
    description: |
      The kubernetes namespace that should be used.
    type: string
    default: ""
  watch-rollout-status:
    description: |
      Whether to watch the status of the latest rollout until it's done.
    type: boolean
    default: true
  pinned-revision-to-watch:
    description: |
      Pin a specific revision to be watched and abort watching if it is rolled
      over by another revision.
    type: string
    default: ""
  watch-timeout:
    description: |
      The length of time to wait before ending the watch, zero means never.
      Any other values should contain a corresponding time unit (e.g. 1s, 2m, 3h).
    type: string
    default: ""
  show-kubectl-command:
    description: |
      Whether to show the kubectl command used.
    type: boolean
    default: false

steps:
  - run:
      name: Show the resource rollout status
      no_output_time: <<parameters.watch-timeout>>
      command: |
        RESOURCE_NAME="<< parameters.resource-name >>"
        NAMESPACE="<< parameters.namespace >>"
        WATCH_ROLLOUT_STATUS="<< parameters.watch-rollout-status >>"
        PINNED_REVISION_TO_WATCH="<< parameters.pinned-revision-to-watch >>"
        WATCH_TIMEOUT="<< parameters.watch-timeout >>"
        if [ -n "${RESOURCE_NAME}" ]; then
          set -- "$@" "${RESOURCE_NAME}"
        fi
        if [ -n "${NAMESPACE}" ]; then
          set -- "$@" "--namespace=${NAMESPACE}"
        fi
        if [ "${WATCH_ROLLOUT_STATUS}" == "true" ]; then
          set -- "$@" --watch=true
          if [ -n "${PINNED_REVISION_TO_WATCH}" ]; then
            set -- "$@" "--revision=${PINNED_REVISION_TO_WATCH}"
          fi
          if [ -n "${WATCH_TIMEOUT}" ]; then
            set -- "$@" "--timeout=${WATCH_TIMEOUT}"
          fi
        fi
        <<# parameters.show-kubectl-command >>set -x<</ parameters.show-kubectl-command >>
        kubectl rollout status "$@"
        <<# parameters.show-kubectl-command >>set +x<</ parameters.show-kubectl-command >>
  - run:
      name: Get a description of the resource
      command: |
        NAMESPACE="<< parameters.namespace >>"
        if [ -n "${NAMESPACE}" ]; then
          set -- "$@" "--namespace=${NAMESPACE}"
        fi
        <<# parameters.show-kubectl-command >>set -x<</ parameters.show-kubectl-command >>
        kubectl describe << parameters.resource-name >> "$@"
        <<# parameters.show-kubectl-command >>set +x<</ parameters.show-kubectl-command >>
