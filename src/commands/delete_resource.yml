description: |
  Delete kubernetes resource(s).
  Requirements: kubeconfig should be configured to connect to the cluster.

parameters:
  resource_file_path:
    description: |
      Path to file used to describe the resource.
      Should not be set when the "resource_types" parameter is specified.
    type: string
    default: ""
  resource_types:
    description: |
      Specify what is to be deleted in the form of resource types.
      This parameter is meant to be combined with either the
      "resource_names" or the "label_selector" parameter.
      e.g. use the value "pods,services" for "resource_types" and
      the value "name=myLabel" for "label_selector" to delete pods and services
      with the label name=myLabel.
      e.g. use the value "pods,services" for "resource_types" and
      the value "baz foo" for "resource_names" to delete pods and services
      the match the names "baz" and "foo".

      Should not be set when the "resource_file_path" parameter is specified.
    type: string
    default: ""
  resource_names:
    description: |
      Specifies the names of resource(s) to be deleted.
      Effective only when the resource_types parameter is specified.
      Cannot be used together with the label_selector parameter.
    type: string
    default: ""
  label_selector:
    description: |
      Use a label selector on the resource(s) to be deleted.
      Effective only when the resource_types parameter is specified.
      Cannot be used together with the resource_names parameter.
    type: string
    default: ""
  all:
    description: |
      If true, deletes all resources including uninitialized ones, in the
      namespace of the specified resource types.
    type: boolean
    default: false
  cascade:
    description: |
      If true, cascades the deletion of the resources managed by this resource.
      (e.g. Pods created by a ReplicationController)
      Must be "background" or "foreground"
    type: enum
    default: "background"
    enum: ["background", "foreground"]
  force:
    description: |
      Only used when "0" is specified for grace_period. If true, remove
      resources from API and bypass graceful deletion. Note that immediate
      deletion of some resources may result in inconsistency or data
      loss and requires confirmation.
    type: boolean
    default: false
  grace_period:
    description: |
      Period of time in seconds given to the resource to terminate gracefully.
      A value of "-1" will be ignored.
    type: integer
    default: -1
  ignore_not_found:
    description: |
      If true, treats "resource not found" as a successful delete.
      (Note: unlike the kubectl command, this does not default to true
      when the "all" parameter value is set to true)
    type: boolean
    default: false
  now:
    description: |
      If true, resources are signaled for immediate shutdown.
    type: boolean
    default: false
  wait:
    description: |
      If true, wait for resources to be gone before returning.
      This waits for finalizers.
    type: boolean
    default: true
  namespace:
    description: |
      The kubernetes namespace that should be used.
    type: string
    default: ""
  dry_run:
    description: |
      Whether the kubectl command will be executed in dry_run mode.
      Must be "none", "server", or "client"
    type: enum
    default: ""
    enum: ["", "server", "client"]
  kustomize:
    description: |
      Enable it to run the kubectl command with the option -k for kustomize.
    type: boolean
    default: false
  show_kubectl_command:
    description: |
      Whether to show the kubectl command used.
    type: boolean
    default: false

steps:
  - run:
      name: Delete the k8s resource(s)
      environment:
        PARAM_RESOURCE_FILE_PATH: << parameters.resource_file_path >>
        PARAM_RESOURCE_TYPES: << parameters.resource_types >>
        PARAM_RESOURCE_NAMES: << parameters.resource_names >>
        PARAM_LABEL_SELECTOR: << parameters.label_selector >>
        PARAM_ALL: << parameters.all >>
        PARAM_CASCADE: << parameters.cascade >>
        PARAM_FORCE: << parameters.force >>
        PARAM_GRACE_PERIOD: << parameters.grace_period >>
        PARAM_IGNORE_NOT_FOUND: << parameters.ignore_not_found >>
        PARAM_NOW: << parameters.now >>
        PARAM_WAIT: << parameters.wait >>
        PARAM_NAMESPACE: << parameters.namespace >>
        PARAM_DRY_RUN: << parameters.dry_run >>
        PARAM_KUSTOMIZE: << parameters.kustomize >>
      command: <<include(scripts/delete_resource.sh)>>
